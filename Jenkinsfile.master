pipeline {
    agent any

    // Define environment variables
    environment {
        DOCKER_HUB_USERNAME = 'suganyamadhan1996'
        DOCKER_HUB_PROD_REPO = 'prod'
        GITHUB_USERNAME = 'suganyaanbalagan123'
        IMAGE_TAG = '39'
    }

    stages {
        stage('Checkout') {
            steps {
                // Authenticate with GitHub using the provided credentials
                withCredentials([usernamePassword(credentialsId: '111', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
                    // Checkout the code from the GitHub repository
                    checkout([$class: 'GitSCM', branches: [[name: 'dev']], userRemoteConfigs: [[url: 'https://github.com/suganyaanbalagan123/reactjs_demo1.git']]])
                }
            }
        }

        stage('Pull Docker Image') {
            steps {
                // Authenticate with Docker Hub using --password-stdin
                withCredentials([usernamePassword(credentialsId: '222', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                    sh "echo \$DOCKER_HUB_PASSWORD | docker login -u \$DOCKER_HUB_USERNAME --password-stdin"
                }
                
                // Pull the specific Docker image from Docker Hub's "prod" repository using the provided image tag
                sh "docker pull ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_PROD_REPO}:${IMAGE_TAG}"
            }
        }

        stage('Transfer Files and Execute Docker Compose on Target Server') {
            steps {
                script {
                    def remote = [
                        user: 'ubuntu', // SSH user on the target server
                        host: '65.0.135.60', // IP address or hostname of the target server
                        port: 22, // SSH port
                        credentialsId: 'jenkins1', // The name of the configured SSH server in Jenkins
                    ]
                    
                    // Transfer docker-compose.yml file to the target server
                    echo "Remote Configuration: ${remote}"  // Debugging line
                    
                    echo "Remote Directory Contents Before Transfer:"
                    sh "ssh ubuntu@65.0.135.60 'ls -l /home/ubuntu/app/'"
   
                    sshPublisher(
                        publishers: [
                            sshPublisherDesc(
                                transfers: [
                                    sshTransfer(
                                        sourceFiles: "docker-compose.yml",
                                        removePrefix: '', // Remove any prefix from the remote file path
                                        remoteDirectory: "/home/ubuntu/app/",
                                        execCommand: "ls -l /home/ubuntu/app/ && /usr/bin/docker-compose -f /home/ubuntu/app/docker-compose.yml up -d"
                                    )
                                ],
                                configName: 'jenkins1'
                            )
                        ]
                    )
                    
                    echo "Remote Directory Contents After Transfer and Command Execution:"
                    sh "ssh ubuntu@65.0.135.60 'ls -l /home/ubuntu/app/'"
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
