
pipeline {
    agent any

    // Define environment variables
    environment {
        DOCKER_HUB_USERNAME = 'suganyamadhan1996'
        DOCKER_HUB_REPO = 'react-app'
        GITHUB_USERNAME = 'suganyaanbalagan123'
        TARGET_SERVER = '65.0.135.60'
    }

    stages {
        stage('Checkout') {
            steps {
                // Authenticate with GitHub using the provided credentials
                withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
                    // Checkout the code from the GitHub repository
                    checkout([$class: 'GitSCM', branches: [[name: 'dev']], userRemoteConfigs: [[url: 'https://github.com/suganyaanbalagan123/reactjs_demo1.git']]])
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                // Set the build context to the application directory
                dir('/var/lib/jenkins/workspace/reactjs-demo') {
                    // Build the Docker image using the previously pushed image on Docker Hub
                    sh "docker pull ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_REPO}:${BUILD_NUMBER}"
                }
            }
        }

        stage('Deploy to Target Server') {
            steps {
                // Transfer the docker-compose.yml to the target server using the "Publish Over SSH" plugin
                sshPublisher(
                    publishers: [
                        sshPublisherDesc(
                            configName: 'jenkins-ssh-config', // The name of the configured SSH server in Jenkins
                            transfers: [
                                sshTransfer(
                                    sourceFiles: "docker-compose.yml",
                                    remoteDirectory: "/home/ubuntu/app/"
                                )
                            ],
                            verbose: true
                        )
                    ]
                )
                
                // Execute the Docker Compose command on the target server to deploy the application
                sshCommand(
                    host: TARGET_SERVER,
                    port: 22,
                    username: 'ubuntu', // Adjust the username based on your server's configuration
                    password: '',
                    command: "/usr/bin/docker-compose -f /home/ubuntu/app/docker-compose.yml up -d"
                )
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
